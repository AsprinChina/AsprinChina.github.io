<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[优化基础理论]]></title>
    <url>%2F2019%2F07%2F07%2Foptimizationbase%2F</url>
    <content type="text"><![CDATA[引言​ 小站里面后续很多内容都是围绕着优化展开的，所以第一篇博客自然就要讲一讲优化的基础内容。有两方面目的，一是介绍一些数学基础，省去后续赘述；二是规定一下标准形式，这会影响到后续一些结论的形式，本站均采用Boyd的《Convex Optimization》中的标准形式。 ​ 一般地，一个优化问题可以写为目标函数+约束（进一步区分为等式约束与不等式约束）的格式，本站中规定其标准形式为： \begin{split} &min\ \ &f(x)\\ &s.t. &g(x)\ge0\\ &&h(x)=0 \end{split}​ 再规定上述优化问题的拉格朗日函数为 L(x,\mu,\lambda)=f(x)+\mu g(x)+\lambda h(x)​ 上述形式和一些优化教材中的并不一致，比如陈宝林老师的《最优化》，其乘子定义是上述形式的相反数。之所以在各种形式中选取Boyd书中的这一种，是因为大多数文献中均采用这一格式，且诸多优化求解器如cplex、gurobi中的乘子定义也采用这一格式。 基本概念 梯度，雅可比矩阵，与海森矩阵 ​ 定义向量$x=[x_1,\ x_2,\ \cdots,\ x_n]^T$，标量函数$f(x)$，与向量函数$F(x)=[f_1(x),\ f_2(x),\ \cdots,\ f_m(x)]^T$ 则$f(x)$的梯度定义为 \nabla f(x)=[\frac{\partial f(x)}{\partial x_1},\ \frac{\partial f(x)}{\partial x_2}, \ \cdots,\ \frac{\partial f(x)}{\partial x_n}]$f(x)$的海森矩阵定义为 \nabla ^2 f(x) = \begin{bmatrix} \frac{\partial ^2 f(x)}{\partial x_1^2} & \frac{\partial ^2 f(x)}{\partial x_1 \partial x_2} & \cdots & \frac{\partial ^2 f(x)}{\partial x_1 \partial x_n} \\ \frac{\partial ^2 f(x)}{\partial x_2 \partial x_1} & \frac{\partial ^2 f(x)}{\partial x_2 ^2} & \cdots & \frac{\partial ^2 f(x)}{\partial x_2 \partial x_n} \\ \vdots & \vdots & \ddots & \vdots \\ \frac{\partial ^2 f(x)}{\partial x_n \partial x_1} & \frac{\partial ^2 f(x)}{\partial x_n \partial x_2} & \cdots & \frac{\partial ^2 f(x)}{\partial x_n^2} \\ \end{bmatrix}$F(x)$的雅可比矩阵定义为 Jacobi(F)= \begin{bmatrix} \frac{\partial f_1(x)}{\partial x_1} & \frac{\partial f_1(x)}{\partial x_2} & \cdots & \frac{\partial f_1(x)}{\partial x_n} \\ \frac{\partial f_2(x)}{\partial x_1} & \frac{\partial f_2(x)}{\partial x_2} & \cdots & \frac{\partial f_2(x)}{\partial x_n} \\ \vdots & \vdots & \ddots & \vdots \\ \frac{\partial f_m(x)}{\partial x_1} & \frac{\partial f_m(x)}{\partial x_2} & \cdots & \frac{\partial f_m(x)}{\partial x_n} \end{bmatrix}​ 从上述定义中可以看到，$f(x)$的梯度的雅可比矩阵就是其海森矩阵。 凸集 ​ 记$S\in\mathbb R^n$，若对$\forall x_1,\ x_2\in S, \ \forall \lambda \in [0,1]$有 \lambda x_1 + (1-\lambda)x_2 \in S则称$S$是一个凸集。 ​ 感性来说，在一个集合里面任选两点连起来，如果这条线段被这个集合包围，则为凸集，反之就不是，如图1$^{[1]}$。 图1 左：凸集，右：非凸集 凸函数 ​ 对于函数$f(x)$，若满足定义域为非空凸集，且对$\forall x_1,\ x_2\in \mathbf {dom} \ f, \ \forall \lambda \in [0,1]$有 f(\lambda x_1+(1-\lambda) x_2) \le \lambda f(x_1)+(1-\lambda)f(x_2)则称$f(x)$是定义域上的凸函数，$-f(x)$是定义域上的凹函数。 ​ 感性来说，一个函数上任意两点连线，这条线段比原函数不低，则为凸函数，反之则不是，如图2$^{[1]}$。 图2 凸函数 ​ 特别地，如果$f(x)$可微，那么可用更方便的一阶条件（要求一阶可微）、二阶条件（要求二阶可微）判断凸函数。 ​ 一阶条件：定义在非空开凸集上的可微函数$f(x)$是凸函数的充要条件是，对$\forall x_1,\ x_2\in \mathbf {dom} f\ $有 f(x_2) \ge f(x_1)+\nabla f(x_1)^T(x_2-x_1)​ 二阶条件：定义在非空开凸集的二次可微函数$f(x)$是凸函数的充要条件是，对$\forall x \in \mathbf {dom} f\ $有$\nabla ^2 f(x)$半 正定。 凸优化问题 ​ 若一个优化问题是求凸函数在凸集上的极小点，则称为凸优化问题。 ​ 对于引言中所述的优化问题标准形式，若满足$f(x)$是凸函数，$g(x)$是凹函数，$h(x)$是仿射函数，则该优化问题是一个凸优化问题。 ​ 此处要特别注意，优化问题中的约束必须是剔除冗余约束的。举个例子，对于问题 \begin{split} &min\ \ &y\\ &s.t. &y^2-1\ge0\\ &&y\ge0 \end{split}看似$g(y)=y^2-1$的海森矩阵正定，是一个凸函数，故上面这个问题非凸，但实际上从定义出发可推得两个约束构成的可行域是一个凸集，故该问题是一个凸优化问题。之所以产生这样的矛盾是因为上述表达中未剔除冗余约束，把$\{y|y^2-1\ge0\}$改写成$\{y|y\ge1\} \cup \{y|y\le-1\}$，而该集合与另一个约束构成的可行域$\{y|y\ge0\}$的交集为$\{y|y\ge1\}$，即上述问题中$y\le-1$和$y\ge0$均为冗余约束， 参考资料[1] Boyd S, Vandenberghe L. Convex optimization[M]. Cambridge university press, 2004.]]></content>
      <categories>
        <category>优化</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[博客编辑与发布]]></title>
    <url>%2F2019%2F07%2F07%2Fblog-edit-deploy%2F</url>
    <content type="text"><![CDATA[markdown规则——怎么写blog标题1个# 到 6个# 分别表示一级标题（large）到六级标题（small)。#号与文字之间留一空 列表无序列表前面加* 1 (* 1) 2 (* 2) 有序列表前面加数字 1 (1. 1) 2 (2. 2) 引用 文字前面加&gt; (&gt; 123) 插入图片 上一行代码为 ! [图片名] (图片地址/链接) 超链接这是GitHub的网站链接。 上一行代码为 这是[GitHub] (http://github.com)的网站链接 粗体与斜体这几个字是粗体，用两个星号包围 这几个字是斜体，用一个星号包围 上一行代码为 **……** *……* 用’\\’进行转义 代码框12import numpy as npimport tensorflow as tf 格式为``` codes ``` 更多规则公式、脚注、删除线、上下标、任务列表、高亮等，点击链接 博客推送规则——怎么传blog 前序工作：github申请一个page，本地安装git、nodes、hexo等，完成个性化设置……详情点击 常用指令： hexo clean：清除部署网站的缓存 hexo g：generate，在本地生成静态网页文件 hexo d：deploy，将本地静态文件部署到github hexo s：sever，将本地静态文件部署到本地端口（localhost:4000） hexo new blogname：新建一个名为blogname的博客 hexo new page pagename：新建一个名为pagename的子网页 blog推送 在hexo安装文件夹处打开git窗口（git bash here）。 hexo命令新建一个博客：hexo new newblog，然后会在hexo文件夹下的/source/_posts文件夹里面生成相应名字的md文件（newblog.md）。 在这个md文件中写入博客内容（markdown格式）。 git窗口中依次输入指令hexo clean清除缓存，输入指令hexo g在本地生成静态文件，输入指令hexo d部署到github中。 完成blog发布。]]></content>
      <categories>
        <category>生产工具</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F07%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
